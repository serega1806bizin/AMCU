[
  {
    "type": "task",
    "id": 1,
    "nazwa": "Основы JavaScript",
    "nomer": 1,
    "link": "https://example.com/js-basics",
    "totalPoints": 100,
    "progress": 50,
    "questions": [
      { "id": 1, "text": "Что такое замыкание?", "points": 10 },
      { "id": 2, "text": "Как объявить переменную?", "points": 10 }
    ]
  },
  {
    "type": "task",
    "id": 2,
    "nazwa": "Работа с массивами",
    "nomer": 2,
    "totalPoints": 50,
    "progress": 20,
    "additional": "Обязательно использовать методы map и filter.",
    "questions": [
      { "id": 3, "text": "Создайте массив чисел.", "points": 5 },
      { "id": 4, "text": "Отфильтруйте чётные числа.", "points": 5 }
    ]
  },
  {
    "type": "task",
    "id": 3,
    "nazwa": "Типы данных в TypeScript",
    "nomer": 3,
    "link": "https://example.com/ts-types",
    "totalPoints": 80,
    "progress": 80,
    "questions": [
      { "id": 5, "text": "Что такое union types?", "points": 10 },
      { "id": 6, "text": "Как использовать интерфейсы?", "points": 10 }
    ]
  },
  {
    "type": "task",
    "id": 4,
    "nazwa": "Создание REST API",
    "nomer": 4,
    "link": "https://example.com/rest-api",
    "totalPoints": 150,
    "progress": 0,
    "additional": "Использовать Express и MongoDB.",
    "questions": [
      { "id": 7, "text": "Настройка сервера Express.", "points": 20 },
      { "id": 8, "text": "Создание маршрутов API.", "points": 30 }
    ]
  },
  {
    "type": "task",
    "id": 5,
    "nazwa": "Итоговый экзамен по TypeScript",
    "nomer": 5,
    "link": "https://example.com/final-exam",
    "totalPoints": 200,
    "progress": 0,
    "questions": [
      { "id": 9, "text": "Напишите тип для функции.", "points": 20 },
      { "id": 10, "text": "Создайте интерфейс для объекта.", "points": 20 }
    ]
  }
]
